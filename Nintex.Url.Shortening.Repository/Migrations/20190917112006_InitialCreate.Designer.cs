// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nintex.Url.Shortening.Repository.DbContext;

namespace Nintex.Url.Shortening.Repository.Migrations
{
    [DbContext(typeof(ShortUrlDbContext))]
    [Migration("20190917112006_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Nintex.Url.Shortening.Core.DbModels.AccountModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PasswordHash = new byte[] { 106, 204, 190, 54, 155, 152, 171, 212, 28, 192, 78, 167, 71, 74, 108, 208, 67, 175, 115, 203, 120, 112, 79, 150, 206, 170, 95, 182, 10, 1, 32, 39, 189, 71, 116, 134, 10, 129, 243, 135, 86, 82, 224, 201, 207, 215, 183, 118, 152, 36, 240, 216, 215, 4, 99, 221, 77, 90, 173, 253, 92, 242, 37, 81 },
                            PasswordSalt = new byte[] { 252, 84, 34, 63, 220, 130, 140, 54, 102, 43, 50, 92, 201, 130, 5, 132, 23, 204, 120, 137, 51, 212, 145, 175, 45, 240, 172, 151, 213, 178, 22, 189, 27, 252, 240, 162, 120, 100, 131, 130, 217, 8, 117, 184, 44, 80, 122, 11, 73, 120, 249, 17, 10, 72, 96, 184, 84, 213, 249, 137, 118, 202, 155, 90, 127, 227, 179, 158, 28, 135, 114, 182, 205, 69, 119, 52, 185, 99, 106, 34, 188, 165, 108, 73, 115, 101, 120, 5, 92, 27, 183, 100, 211, 195, 81, 251, 18, 166, 3, 174, 253, 170, 28, 254, 195, 192, 229, 62, 42, 69, 224, 98, 169, 26, 31, 147, 30, 26, 49, 6, 211, 10, 85, 79, 124, 225, 151, 79 },
                            UpdateDate = new DateTime(2019, 9, 17, 11, 20, 6, 391, DateTimeKind.Utc).AddTicks(1613),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Nintex.Url.Shortening.Core.DbModels.ShortUrlLogEntryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AccessTimeUtc");

                    b.Property<string>("ClientIp");

                    b.Property<long>("ShortUrlId");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("ShortUrlVisitLog");
                });

            modelBuilder.Entity("Nintex.Url.Shortening.Core.DbModels.ShortUrlModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("CreatorId");

                    b.Property<DateTime?>("ExpiresUtc");

                    b.Property<string>("Key");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasFilter("[Key] IS NOT NULL");

                    b.ToTable("ShortUrl");
                });
#pragma warning restore 612, 618
        }
    }
}
